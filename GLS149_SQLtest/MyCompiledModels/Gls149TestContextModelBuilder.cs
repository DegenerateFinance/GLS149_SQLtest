// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Internal;

#pragma warning disable 219, 612, 618
#nullable disable

namespace MyCompiledModels
{
    public partial class Gls149TestContextModel
    {
        partial void Initialize()
        {
            var univerre = UniverreEntityType.Create(this);

            UniverreEntityType.CreateAnnotations(univerre);

            AddAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);
            AddAnnotation("ProductVersion", "8.0.8");
            AddAnnotation("Relational:MaxIdentifierLength", 64);
            AddRuntimeAnnotation("Relational:RelationalModel", CreateRelationalModel());
        }

        private IRelationalModel CreateRelationalModel()
        {
            var relationalModel = new RelationalModel(this);

            var univerre = FindEntityType("GLS149_SQLtest.Models.Univerre")!;

            var defaultTableMappings = new List<TableMappingBase<ColumnMappingBase>>();
            univerre.SetRuntimeAnnotation("Relational:DefaultMappings", defaultTableMappings);
            var gLS149_SQLtestModelsUniverreTableBase = new TableBase("GLS149_SQLtest.Models.Univerre", null, relationalModel);
            var uVRBar01ColumnBase = new ColumnBase<ColumnMappingBase>("UVRBar01", "decimal(10)", gLS149_SQLtestModelsUniverreTableBase)
            {
                IsNullable = true
            };
            gLS149_SQLtestModelsUniverreTableBase.Columns.Add("UVRBar01", uVRBar01ColumnBase);
            var uVRBar02ColumnBase = new ColumnBase<ColumnMappingBase>("UVRBar02", "decimal(10)", gLS149_SQLtestModelsUniverreTableBase)
            {
                IsNullable = true
            };
            gLS149_SQLtestModelsUniverreTableBase.Columns.Add("UVRBar02", uVRBar02ColumnBase);
            var uVRDT01ColumnBase = new ColumnBase<ColumnMappingBase>("UVRDT01", "datetime", gLS149_SQLtestModelsUniverreTableBase)
            {
                IsNullable = true
            };
            gLS149_SQLtestModelsUniverreTableBase.Columns.Add("UVRDT01", uVRDT01ColumnBase);
            var uVRDT02ColumnBase = new ColumnBase<ColumnMappingBase>("UVRDT02", "datetime", gLS149_SQLtestModelsUniverreTableBase)
            {
                IsNullable = true
            };
            gLS149_SQLtestModelsUniverreTableBase.Columns.Add("UVRDT02", uVRDT02ColumnBase);
            var uVRFec01ColumnBase = new ColumnBase<ColumnMappingBase>("UVRFec01", "datetime", gLS149_SQLtestModelsUniverreTableBase)
            {
                IsNullable = true
            };
            gLS149_SQLtestModelsUniverreTableBase.Columns.Add("UVRFec01", uVRFec01ColumnBase);
            var uVRFec02ColumnBase = new ColumnBase<ColumnMappingBase>("UVRFec02", "datetime", gLS149_SQLtestModelsUniverreTableBase)
            {
                IsNullable = true
            };
            gLS149_SQLtestModelsUniverreTableBase.Columns.Add("UVRFec02", uVRFec02ColumnBase);
            var uVRKeyC01ColumnBase = new ColumnBase<ColumnMappingBase>("UVRKeyC01", "char(30)", gLS149_SQLtestModelsUniverreTableBase);
            gLS149_SQLtestModelsUniverreTableBase.Columns.Add("UVRKeyC01", uVRKeyC01ColumnBase);
            var uVRKeyC02ColumnBase = new ColumnBase<ColumnMappingBase>("UVRKeyC02", "char(30)", gLS149_SQLtestModelsUniverreTableBase);
            gLS149_SQLtestModelsUniverreTableBase.Columns.Add("UVRKeyC02", uVRKeyC02ColumnBase);
            var uVRKeyN01ColumnBase = new ColumnBase<ColumnMappingBase>("UVRKeyN01", "int", gLS149_SQLtestModelsUniverreTableBase);
            gLS149_SQLtestModelsUniverreTableBase.Columns.Add("UVRKeyN01", uVRKeyN01ColumnBase);
            var uVRKeyN02ColumnBase = new ColumnBase<ColumnMappingBase>("UVRKeyN02", "int", gLS149_SQLtestModelsUniverreTableBase);
            gLS149_SQLtestModelsUniverreTableBase.Columns.Add("UVRKeyN02", uVRKeyN02ColumnBase);
            var uVRNum01ColumnBase = new ColumnBase<ColumnMappingBase>("UVRNum01", "int", gLS149_SQLtestModelsUniverreTableBase)
            {
                IsNullable = true
            };
            gLS149_SQLtestModelsUniverreTableBase.Columns.Add("UVRNum01", uVRNum01ColumnBase);
            var uVRNum02ColumnBase = new ColumnBase<ColumnMappingBase>("UVRNum02", "int", gLS149_SQLtestModelsUniverreTableBase)
            {
                IsNullable = true
            };
            gLS149_SQLtestModelsUniverreTableBase.Columns.Add("UVRNum02", uVRNum02ColumnBase);
            var uVRTablaColumnBase = new ColumnBase<ColumnMappingBase>("UVRTabla", "char(12)", gLS149_SQLtestModelsUniverreTableBase);
            gLS149_SQLtestModelsUniverreTableBase.Columns.Add("UVRTabla", uVRTablaColumnBase);
            var uVRTxt01ColumnBase = new ColumnBase<ColumnMappingBase>("UVRTxt01", "varchar(100)", gLS149_SQLtestModelsUniverreTableBase)
            {
                IsNullable = true
            };
            gLS149_SQLtestModelsUniverreTableBase.Columns.Add("UVRTxt01", uVRTxt01ColumnBase);
            var uVRTxt02ColumnBase = new ColumnBase<ColumnMappingBase>("UVRTxt02", "varchar(100)", gLS149_SQLtestModelsUniverreTableBase)
            {
                IsNullable = true
            };
            gLS149_SQLtestModelsUniverreTableBase.Columns.Add("UVRTxt02", uVRTxt02ColumnBase);
            relationalModel.DefaultTables.Add("GLS149_SQLtest.Models.Univerre", gLS149_SQLtestModelsUniverreTableBase);
            var gLS149_SQLtestModelsUniverreMappingBase = new TableMappingBase<ColumnMappingBase>(univerre, gLS149_SQLtestModelsUniverreTableBase, true);
            gLS149_SQLtestModelsUniverreTableBase.AddTypeMapping(gLS149_SQLtestModelsUniverreMappingBase, false);
            defaultTableMappings.Add(gLS149_SQLtestModelsUniverreMappingBase);
            RelationalModel.CreateColumnMapping((ColumnBase<ColumnMappingBase>)uVRKeyN01ColumnBase, univerre.FindProperty("UVRKeyN01")!, gLS149_SQLtestModelsUniverreMappingBase);
            RelationalModel.CreateColumnMapping((ColumnBase<ColumnMappingBase>)uVRTablaColumnBase, univerre.FindProperty("UVRTabla")!, gLS149_SQLtestModelsUniverreMappingBase);
            RelationalModel.CreateColumnMapping((ColumnBase<ColumnMappingBase>)uVRKeyC01ColumnBase, univerre.FindProperty("UvrkeyC01")!, gLS149_SQLtestModelsUniverreMappingBase);
            RelationalModel.CreateColumnMapping((ColumnBase<ColumnMappingBase>)uVRKeyC02ColumnBase, univerre.FindProperty("UvrkeyC02")!, gLS149_SQLtestModelsUniverreMappingBase);
            RelationalModel.CreateColumnMapping((ColumnBase<ColumnMappingBase>)uVRKeyN02ColumnBase, univerre.FindProperty("UvrkeyN02")!, gLS149_SQLtestModelsUniverreMappingBase);
            RelationalModel.CreateColumnMapping((ColumnBase<ColumnMappingBase>)uVRBar01ColumnBase, univerre.FindProperty("UVRBar01")!, gLS149_SQLtestModelsUniverreMappingBase);
            RelationalModel.CreateColumnMapping((ColumnBase<ColumnMappingBase>)uVRBar02ColumnBase, univerre.FindProperty("UVRBar02")!, gLS149_SQLtestModelsUniverreMappingBase);
            RelationalModel.CreateColumnMapping((ColumnBase<ColumnMappingBase>)uVRNum01ColumnBase, univerre.FindProperty("UVRNum01")!, gLS149_SQLtestModelsUniverreMappingBase);
            RelationalModel.CreateColumnMapping((ColumnBase<ColumnMappingBase>)uVRNum02ColumnBase, univerre.FindProperty("UVRNum02")!, gLS149_SQLtestModelsUniverreMappingBase);
            RelationalModel.CreateColumnMapping((ColumnBase<ColumnMappingBase>)uVRTxt01ColumnBase, univerre.FindProperty("UVRTxt01")!, gLS149_SQLtestModelsUniverreMappingBase);
            RelationalModel.CreateColumnMapping((ColumnBase<ColumnMappingBase>)uVRDT01ColumnBase, univerre.FindProperty("Uvrdt01")!, gLS149_SQLtestModelsUniverreMappingBase);
            RelationalModel.CreateColumnMapping((ColumnBase<ColumnMappingBase>)uVRDT02ColumnBase, univerre.FindProperty("Uvrdt02")!, gLS149_SQLtestModelsUniverreMappingBase);
            RelationalModel.CreateColumnMapping((ColumnBase<ColumnMappingBase>)uVRFec01ColumnBase, univerre.FindProperty("Uvrfec01")!, gLS149_SQLtestModelsUniverreMappingBase);
            RelationalModel.CreateColumnMapping((ColumnBase<ColumnMappingBase>)uVRFec02ColumnBase, univerre.FindProperty("Uvrfec02")!, gLS149_SQLtestModelsUniverreMappingBase);
            RelationalModel.CreateColumnMapping((ColumnBase<ColumnMappingBase>)uVRTxt02ColumnBase, univerre.FindProperty("Uvrtxt02")!, gLS149_SQLtestModelsUniverreMappingBase);

            var tableMappings = new List<TableMapping>();
            univerre.SetRuntimeAnnotation("Relational:TableMappings", tableMappings);
            var univerreTable = new Table("univerre", null, relationalModel);
            var uVRTablaColumn = new Column("UVRTabla", "char(12)", univerreTable);
            univerreTable.Columns.Add("UVRTabla", uVRTablaColumn);
            var uVRKeyN01Column = new Column("UVRKeyN01", "int", univerreTable);
            univerreTable.Columns.Add("UVRKeyN01", uVRKeyN01Column);
            var uVRKeyN02Column = new Column("UVRKeyN02", "int", univerreTable);
            univerreTable.Columns.Add("UVRKeyN02", uVRKeyN02Column);
            var uVRKeyC01Column = new Column("UVRKeyC01", "char(30)", univerreTable);
            univerreTable.Columns.Add("UVRKeyC01", uVRKeyC01Column);
            var uVRKeyC02Column = new Column("UVRKeyC02", "char(30)", univerreTable);
            univerreTable.Columns.Add("UVRKeyC02", uVRKeyC02Column);
            var uVRBar01Column = new Column("UVRBar01", "decimal(10)", univerreTable)
            {
                IsNullable = true
            };
            univerreTable.Columns.Add("UVRBar01", uVRBar01Column);
            var uVRBar02Column = new Column("UVRBar02", "decimal(10)", univerreTable)
            {
                IsNullable = true
            };
            univerreTable.Columns.Add("UVRBar02", uVRBar02Column);
            var uVRDT01Column = new Column("UVRDT01", "datetime", univerreTable)
            {
                IsNullable = true
            };
            univerreTable.Columns.Add("UVRDT01", uVRDT01Column);
            var uVRDT02Column = new Column("UVRDT02", "datetime", univerreTable)
            {
                IsNullable = true
            };
            univerreTable.Columns.Add("UVRDT02", uVRDT02Column);
            var uVRFec01Column = new Column("UVRFec01", "datetime", univerreTable)
            {
                IsNullable = true
            };
            univerreTable.Columns.Add("UVRFec01", uVRFec01Column);
            var uVRFec02Column = new Column("UVRFec02", "datetime", univerreTable)
            {
                IsNullable = true
            };
            univerreTable.Columns.Add("UVRFec02", uVRFec02Column);
            var uVRNum01Column = new Column("UVRNum01", "int", univerreTable)
            {
                IsNullable = true
            };
            univerreTable.Columns.Add("UVRNum01", uVRNum01Column);
            var uVRNum02Column = new Column("UVRNum02", "int", univerreTable)
            {
                IsNullable = true
            };
            univerreTable.Columns.Add("UVRNum02", uVRNum02Column);
            var uVRTxt01Column = new Column("UVRTxt01", "varchar(100)", univerreTable)
            {
                IsNullable = true
            };
            univerreTable.Columns.Add("UVRTxt01", uVRTxt01Column);
            var uVRTxt02Column = new Column("UVRTxt02", "varchar(100)", univerreTable)
            {
                IsNullable = true
            };
            univerreTable.Columns.Add("UVRTxt02", uVRTxt02Column);
            var pRIMARY = new UniqueConstraint("PRIMARY", univerreTable, new[] { uVRTablaColumn, uVRKeyN01Column, uVRKeyN02Column, uVRKeyC01Column, uVRKeyC02Column });
            univerreTable.PrimaryKey = pRIMARY;
            var pRIMARYUc = RelationalModel.GetKey(this,
                "GLS149_SQLtest.Models.Univerre",
                new[] { "UVRTabla", "UVRKeyN01", "UvrkeyN02", "UvrkeyC01", "UvrkeyC02" });
            pRIMARY.MappedKeys.Add(pRIMARYUc);
            RelationalModel.GetOrCreateUniqueConstraints(pRIMARYUc).Add(pRIMARY);
            univerreTable.UniqueConstraints.Add("PRIMARY", pRIMARY);
            relationalModel.Tables.Add(("univerre", null), univerreTable);
            var univerreTableMapping = new TableMapping(univerre, univerreTable, true);
            univerreTable.AddTypeMapping(univerreTableMapping, false);
            tableMappings.Add(univerreTableMapping);
            RelationalModel.CreateColumnMapping(uVRKeyN01Column, univerre.FindProperty("UVRKeyN01")!, univerreTableMapping);
            RelationalModel.CreateColumnMapping(uVRTablaColumn, univerre.FindProperty("UVRTabla")!, univerreTableMapping);
            RelationalModel.CreateColumnMapping(uVRKeyC01Column, univerre.FindProperty("UvrkeyC01")!, univerreTableMapping);
            RelationalModel.CreateColumnMapping(uVRKeyC02Column, univerre.FindProperty("UvrkeyC02")!, univerreTableMapping);
            RelationalModel.CreateColumnMapping(uVRKeyN02Column, univerre.FindProperty("UvrkeyN02")!, univerreTableMapping);
            RelationalModel.CreateColumnMapping(uVRBar01Column, univerre.FindProperty("UVRBar01")!, univerreTableMapping);
            RelationalModel.CreateColumnMapping(uVRBar02Column, univerre.FindProperty("UVRBar02")!, univerreTableMapping);
            RelationalModel.CreateColumnMapping(uVRNum01Column, univerre.FindProperty("UVRNum01")!, univerreTableMapping);
            RelationalModel.CreateColumnMapping(uVRNum02Column, univerre.FindProperty("UVRNum02")!, univerreTableMapping);
            RelationalModel.CreateColumnMapping(uVRTxt01Column, univerre.FindProperty("UVRTxt01")!, univerreTableMapping);
            RelationalModel.CreateColumnMapping(uVRDT01Column, univerre.FindProperty("Uvrdt01")!, univerreTableMapping);
            RelationalModel.CreateColumnMapping(uVRDT02Column, univerre.FindProperty("Uvrdt02")!, univerreTableMapping);
            RelationalModel.CreateColumnMapping(uVRFec01Column, univerre.FindProperty("Uvrfec01")!, univerreTableMapping);
            RelationalModel.CreateColumnMapping(uVRFec02Column, univerre.FindProperty("Uvrfec02")!, univerreTableMapping);
            RelationalModel.CreateColumnMapping(uVRTxt02Column, univerre.FindProperty("Uvrtxt02")!, univerreTableMapping);
            return relationalModel.MakeReadOnly();
        }
    }
}
